spring:
    cloud:
        openfeign:
            client:
                config:
                    default:
                        connectTimeout: 10000
                        readTimeout: 60000
                        loggerLevel: full
                    openai:
                        url: https://api.openai.com
                        errorDecoder: com.few.generator.config.feign.OpenAiErrorDecoder
                        defaultRequestHeaders:
                            Authorization: "Bearer ${OPENAI_API_TOKEN:thisisopenai}"
                            Content-Type: "application/json"
                        requestInterceptors:
                            - com.few.generator.config.feign.OpenAiRequestInterceptor
                        encoder: com.few.generator.config.feign.OpenAiEncoder
                        decoder: com.few.generator.config.feign.OpenAiDecoder
    generator:
        datasource:
            url: jdbc:mysql://localhost:13306/generator?allowPublicKeyRetrieval=true&rewriteBatchedStatements=true&allowMultiQueries=true
            username: root
            password: root
            driver-class-name: com.mysql.cj.jdbc.Driver
        jpa:
            hibernate:
                ddl-auto: update
            properties:
                hibernate:
                    format_sql: true

scheduling:
    cron:
        generator: "0 0 4 * * *"
        group: "0 0 5 * * *"

urls:
    webhook:
        discord: "localhost:8080/webhook/discord/unused"
        slack: "localhost:8080/webhook/slack/unused"

generator:
    scraping:
        maxRetries: 5
        defaultRetryAfter: 60
    contents:
        countByCategory: 1
        pageSize: 20
    grouping:
        targetPercentage: 30
        minGroupSize: 3
        maxGroupSize: 10
        similarityThreshold: 0.7

app:
    http:
        connect-timeout: 10
        read-timeout: 15
        write-timeout: 15
        max-idle-connections: 1
        keep-alive-duration: 60
