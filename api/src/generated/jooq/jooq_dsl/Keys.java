/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl;


import jooq.jooq_dsl.tables.ArticleIfo;
import jooq.jooq_dsl.tables.ArticleMainCard;
import jooq.jooq_dsl.tables.ArticleMst;
import jooq.jooq_dsl.tables.ArticleViewCount;
import jooq.jooq_dsl.tables.ArticleViewHis;
import jooq.jooq_dsl.tables.BatchCallExecution;
import jooq.jooq_dsl.tables.DocumentIfo;
import jooq.jooq_dsl.tables.FooTable;
import jooq.jooq_dsl.tables.ImageIfo;
import jooq.jooq_dsl.tables.LogIfo;
import jooq.jooq_dsl.tables.MappingMemberWorkbook;
import jooq.jooq_dsl.tables.MappingWorkbookArticle;
import jooq.jooq_dsl.tables.Member;
import jooq.jooq_dsl.tables.Problem;
import jooq.jooq_dsl.tables.SendArticleEventHistory;
import jooq.jooq_dsl.tables.SubmitHistory;
import jooq.jooq_dsl.tables.Subscription;
import jooq.jooq_dsl.tables.Workbook;
import jooq.jooq_dsl.tables.records.ArticleIfoRecord;
import jooq.jooq_dsl.tables.records.ArticleMainCardRecord;
import jooq.jooq_dsl.tables.records.ArticleMstRecord;
import jooq.jooq_dsl.tables.records.ArticleViewCountRecord;
import jooq.jooq_dsl.tables.records.ArticleViewHisRecord;
import jooq.jooq_dsl.tables.records.BatchCallExecutionRecord;
import jooq.jooq_dsl.tables.records.DocumentIfoRecord;
import jooq.jooq_dsl.tables.records.FooTableRecord;
import jooq.jooq_dsl.tables.records.ImageIfoRecord;
import jooq.jooq_dsl.tables.records.LogIfoRecord;
import jooq.jooq_dsl.tables.records.MappingMemberWorkbookRecord;
import jooq.jooq_dsl.tables.records.MappingWorkbookArticleRecord;
import jooq.jooq_dsl.tables.records.MemberRecord;
import jooq.jooq_dsl.tables.records.ProblemRecord;
import jooq.jooq_dsl.tables.records.SendArticleEventHistoryRecord;
import jooq.jooq_dsl.tables.records.SubmitHistoryRecord;
import jooq.jooq_dsl.tables.records.SubscriptionRecord;
import jooq.jooq_dsl.tables.records.WorkbookRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArticleIfoRecord> CONSTRAINT_B1 = Internal.createUniqueKey(ArticleIfo.ARTICLE_IFO, DSL.name("CONSTRAINT_B1"), new TableField[] { ArticleIfo.ARTICLE_IFO.ARTICLE_MST_ID }, true);
    public static final UniqueKey<ArticleMainCardRecord> ARTICLE_MAIN_CARD_PK = Internal.createUniqueKey(ArticleMainCard.ARTICLE_MAIN_CARD, DSL.name("ARTICLE_MAIN_CARD_PK"), new TableField[] { ArticleMainCard.ARTICLE_MAIN_CARD.ID }, true);
    public static final UniqueKey<ArticleMstRecord> CONSTRAINT_B = Internal.createUniqueKey(ArticleMst.ARTICLE_MST, DSL.name("CONSTRAINT_B"), new TableField[] { ArticleMst.ARTICLE_MST.ID }, true);
    public static final UniqueKey<ArticleViewCountRecord> ARTICLE_VIEW_COUNT_PK = Internal.createUniqueKey(ArticleViewCount.ARTICLE_VIEW_COUNT, DSL.name("ARTICLE_VIEW_COUNT_PK"), new TableField[] { ArticleViewCount.ARTICLE_VIEW_COUNT.ARTICLE_ID }, true);
    public static final UniqueKey<ArticleViewHisRecord> CONSTRAINT_B9 = Internal.createUniqueKey(ArticleViewHis.ARTICLE_VIEW_HIS, DSL.name("CONSTRAINT_B9"), new TableField[] { ArticleViewHis.ARTICLE_VIEW_HIS.ID }, true);
    public static final UniqueKey<BatchCallExecutionRecord> CONSTRAINT_8B = Internal.createUniqueKey(BatchCallExecution.BATCH_CALL_EXECUTION, DSL.name("CONSTRAINT_8B"), new TableField[] { BatchCallExecution.BATCH_CALL_EXECUTION.ID }, true);
    public static final UniqueKey<DocumentIfoRecord> CONSTRAINT_32 = Internal.createUniqueKey(DocumentIfo.DOCUMENT_IFO, DSL.name("CONSTRAINT_32"), new TableField[] { DocumentIfo.DOCUMENT_IFO.ID }, true);
    public static final UniqueKey<FooTableRecord> CONSTRAINT_93 = Internal.createUniqueKey(FooTable.FOO_TABLE, DSL.name("CONSTRAINT_93"), new TableField[] { FooTable.FOO_TABLE.ID }, true);
    public static final UniqueKey<ImageIfoRecord> CONSTRAINT_7 = Internal.createUniqueKey(ImageIfo.IMAGE_IFO, DSL.name("CONSTRAINT_7"), new TableField[] { ImageIfo.IMAGE_IFO.ID }, true);
    public static final UniqueKey<LogIfoRecord> CONSTRAINT_3F = Internal.createUniqueKey(LogIfo.LOG_IFO, DSL.name("CONSTRAINT_3F"), new TableField[] { LogIfo.LOG_IFO.ID }, true);
    public static final UniqueKey<MappingMemberWorkbookRecord> MAPPING_MEMBER_WORKBOOK_PK = Internal.createUniqueKey(MappingMemberWorkbook.MAPPING_MEMBER_WORKBOOK, DSL.name("MAPPING_MEMBER_WORKBOOK_PK"), new TableField[] { MappingMemberWorkbook.MAPPING_MEMBER_WORKBOOK.MEMBER_ID, MappingMemberWorkbook.MAPPING_MEMBER_WORKBOOK.WORKBOOK_ID }, true);
    public static final UniqueKey<MappingWorkbookArticleRecord> MAPPING_WORKBOOK_ARTICLE_PK = Internal.createUniqueKey(MappingWorkbookArticle.MAPPING_WORKBOOK_ARTICLE, DSL.name("MAPPING_WORKBOOK_ARTICLE_PK"), new TableField[] { MappingWorkbookArticle.MAPPING_WORKBOOK_ARTICLE.ARTICLE_ID, MappingWorkbookArticle.MAPPING_WORKBOOK_ARTICLE.WORKBOOK_ID }, true);
    public static final UniqueKey<MemberRecord> CONSTRAINT_8 = Internal.createUniqueKey(Member.MEMBER, DSL.name("CONSTRAINT_8"), new TableField[] { Member.MEMBER.ID }, true);
    public static final UniqueKey<MemberRecord> CONSTRAINT_87 = Internal.createUniqueKey(Member.MEMBER, DSL.name("CONSTRAINT_87"), new TableField[] { Member.MEMBER.EMAIL }, true);
    public static final UniqueKey<ProblemRecord> CONSTRAINT_1 = Internal.createUniqueKey(Problem.PROBLEM, DSL.name("CONSTRAINT_1"), new TableField[] { Problem.PROBLEM.ID }, true);
    public static final UniqueKey<SendArticleEventHistoryRecord> CONSTRAINT_B3 = Internal.createUniqueKey(SendArticleEventHistory.SEND_ARTICLE_EVENT_HISTORY, DSL.name("CONSTRAINT_B3"), new TableField[] { SendArticleEventHistory.SEND_ARTICLE_EVENT_HISTORY.ID }, true);
    public static final UniqueKey<SubmitHistoryRecord> CONSTRAINT_6 = Internal.createUniqueKey(SubmitHistory.SUBMIT_HISTORY, DSL.name("CONSTRAINT_6"), new TableField[] { SubmitHistory.SUBMIT_HISTORY.ID }, true);
    public static final UniqueKey<SubscriptionRecord> CONSTRAINT_9 = Internal.createUniqueKey(Subscription.SUBSCRIPTION, DSL.name("CONSTRAINT_9"), new TableField[] { Subscription.SUBSCRIPTION.ID }, true);
    public static final UniqueKey<SubscriptionRecord> CONSTRAINT_9E = Internal.createUniqueKey(Subscription.SUBSCRIPTION, DSL.name("CONSTRAINT_9E"), new TableField[] { Subscription.SUBSCRIPTION.TARGET_MEMBER_ID, Subscription.SUBSCRIPTION.MEMBER_ID }, true);
    public static final UniqueKey<SubscriptionRecord> CONSTRAINT_9E7 = Internal.createUniqueKey(Subscription.SUBSCRIPTION, DSL.name("CONSTRAINT_9E7"), new TableField[] { Subscription.SUBSCRIPTION.TARGET_WORKBOOK_ID, Subscription.SUBSCRIPTION.MEMBER_ID }, true);
    public static final UniqueKey<WorkbookRecord> CONSTRAINT_3 = Internal.createUniqueKey(Workbook.WORKBOOK, DSL.name("CONSTRAINT_3"), new TableField[] { Workbook.WORKBOOK.ID }, true);
}
