/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.LocalTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Subscription implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long memberId;
    private final Long targetMemberId;
    private final Long targetWorkbookId;
    private final LocalDateTime createdAt;
    private final LocalDateTime deletedAt;
    private final String unsubsOpinion;
    private final Long progress;
    private final LocalTime sendTime;
    private final String sendDay;
    private final LocalDateTime modifiedAt;
    private final LocalDateTime sendAt;

    public Subscription(Subscription value) {
        this.id = value.id;
        this.memberId = value.memberId;
        this.targetMemberId = value.targetMemberId;
        this.targetWorkbookId = value.targetWorkbookId;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.unsubsOpinion = value.unsubsOpinion;
        this.progress = value.progress;
        this.sendTime = value.sendTime;
        this.sendDay = value.sendDay;
        this.modifiedAt = value.modifiedAt;
        this.sendAt = value.sendAt;
    }

    public Subscription(
        Long id,
        Long memberId,
        Long targetMemberId,
        Long targetWorkbookId,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        String unsubsOpinion,
        Long progress,
        LocalTime sendTime,
        String sendDay,
        LocalDateTime modifiedAt,
        LocalDateTime sendAt
    ) {
        this.id = id;
        this.memberId = memberId;
        this.targetMemberId = targetMemberId;
        this.targetWorkbookId = targetWorkbookId;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.unsubsOpinion = unsubsOpinion;
        this.progress = progress;
        this.sendTime = sendTime;
        this.sendDay = sendDay;
        this.modifiedAt = modifiedAt;
        this.sendAt = sendAt;
    }

    /**
     * Getter for <code>SUBSCRIPTION.ID</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>SUBSCRIPTION.MEMBER_ID</code>.
     */
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Getter for <code>SUBSCRIPTION.TARGET_MEMBER_ID</code>.
     */
    public Long getTargetMemberId() {
        return this.targetMemberId;
    }

    /**
     * Getter for <code>SUBSCRIPTION.TARGET_WORKBOOK_ID</code>.
     */
    public Long getTargetWorkbookId() {
        return this.targetWorkbookId;
    }

    /**
     * Getter for <code>SUBSCRIPTION.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>SUBSCRIPTION.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for <code>SUBSCRIPTION.UNSUBS_OPINION</code>.
     */
    public String getUnsubsOpinion() {
        return this.unsubsOpinion;
    }

    /**
     * Getter for <code>SUBSCRIPTION.PROGRESS</code>.
     */
    public Long getProgress() {
        return this.progress;
    }

    /**
     * Getter for <code>SUBSCRIPTION.SEND_TIME</code>.
     */
    public LocalTime getSendTime() {
        return this.sendTime;
    }

    /**
     * Getter for <code>SUBSCRIPTION.SEND_DAY</code>.
     */
    public String getSendDay() {
        return this.sendDay;
    }

    /**
     * Getter for <code>SUBSCRIPTION.MODIFIED_AT</code>.
     */
    public LocalDateTime getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Getter for <code>SUBSCRIPTION.SEND_AT</code>.
     */
    public LocalDateTime getSendAt() {
        return this.sendAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Subscription other = (Subscription) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.memberId == null) {
            if (other.memberId != null)
                return false;
        }
        else if (!this.memberId.equals(other.memberId))
            return false;
        if (this.targetMemberId == null) {
            if (other.targetMemberId != null)
                return false;
        }
        else if (!this.targetMemberId.equals(other.targetMemberId))
            return false;
        if (this.targetWorkbookId == null) {
            if (other.targetWorkbookId != null)
                return false;
        }
        else if (!this.targetWorkbookId.equals(other.targetWorkbookId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.unsubsOpinion == null) {
            if (other.unsubsOpinion != null)
                return false;
        }
        else if (!this.unsubsOpinion.equals(other.unsubsOpinion))
            return false;
        if (this.progress == null) {
            if (other.progress != null)
                return false;
        }
        else if (!this.progress.equals(other.progress))
            return false;
        if (this.sendTime == null) {
            if (other.sendTime != null)
                return false;
        }
        else if (!this.sendTime.equals(other.sendTime))
            return false;
        if (this.sendDay == null) {
            if (other.sendDay != null)
                return false;
        }
        else if (!this.sendDay.equals(other.sendDay))
            return false;
        if (this.modifiedAt == null) {
            if (other.modifiedAt != null)
                return false;
        }
        else if (!this.modifiedAt.equals(other.modifiedAt))
            return false;
        if (this.sendAt == null) {
            if (other.sendAt != null)
                return false;
        }
        else if (!this.sendAt.equals(other.sendAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.targetMemberId == null) ? 0 : this.targetMemberId.hashCode());
        result = prime * result + ((this.targetWorkbookId == null) ? 0 : this.targetWorkbookId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.unsubsOpinion == null) ? 0 : this.unsubsOpinion.hashCode());
        result = prime * result + ((this.progress == null) ? 0 : this.progress.hashCode());
        result = prime * result + ((this.sendTime == null) ? 0 : this.sendTime.hashCode());
        result = prime * result + ((this.sendDay == null) ? 0 : this.sendDay.hashCode());
        result = prime * result + ((this.modifiedAt == null) ? 0 : this.modifiedAt.hashCode());
        result = prime * result + ((this.sendAt == null) ? 0 : this.sendAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Subscription (");

        sb.append(id);
        sb.append(", ").append(memberId);
        sb.append(", ").append(targetMemberId);
        sb.append(", ").append(targetWorkbookId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(unsubsOpinion);
        sb.append(", ").append(progress);
        sb.append(", ").append(sendTime);
        sb.append(", ").append(sendDay);
        sb.append(", ").append(modifiedAt);
        sb.append(", ").append(sendAt);

        sb.append(")");
        return sb.toString();
    }
}
