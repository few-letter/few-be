/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleViewHis implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Long articleMstId;
    private final Long memberId;
    private final LocalDateTime createdAt;
    private final LocalDateTime deletedAt;

    public ArticleViewHis(ArticleViewHis value) {
        this.id = value.id;
        this.articleMstId = value.articleMstId;
        this.memberId = value.memberId;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
    }

    public ArticleViewHis(
        Long id,
        Long articleMstId,
        Long memberId,
        LocalDateTime createdAt,
        LocalDateTime deletedAt
    ) {
        this.id = id;
        this.articleMstId = articleMstId;
        this.memberId = memberId;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>ARTICLE_VIEW_HIS.ID</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>ARTICLE_VIEW_HIS.ARTICLE_MST_ID</code>.
     */
    public Long getArticleMstId() {
        return this.articleMstId;
    }

    /**
     * Getter for <code>ARTICLE_VIEW_HIS.MEMBER_ID</code>.
     */
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Getter for <code>ARTICLE_VIEW_HIS.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>ARTICLE_VIEW_HIS.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ArticleViewHis other = (ArticleViewHis) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.articleMstId == null) {
            if (other.articleMstId != null)
                return false;
        }
        else if (!this.articleMstId.equals(other.articleMstId))
            return false;
        if (this.memberId == null) {
            if (other.memberId != null)
                return false;
        }
        else if (!this.memberId.equals(other.memberId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.articleMstId == null) ? 0 : this.articleMstId.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ArticleViewHis (");

        sb.append(id);
        sb.append(", ").append(articleMstId);
        sb.append(", ").append(memberId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);

        sb.append(")");
        return sb.toString();
    }
}
