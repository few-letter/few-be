/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.Member;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>MEMBER.ID</code>.
     */
    public MemberRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MEMBER.EMAIL</code>.
     */
    public MemberRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>MEMBER.TYPE_CD</code>.
     */
    public MemberRecord setTypeCd(Byte value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.TYPE_CD</code>.
     */
    public Byte getTypeCd() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>MEMBER.DESCRIPTION</code>.
     */
    public MemberRecord setDescription(JSON value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.DESCRIPTION</code>.
     */
    public JSON getDescription() {
        return (JSON) get(3);
    }

    /**
     * Setter for <code>MEMBER.CREATED_AT</code>.
     */
    public MemberRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>MEMBER.MODIFIED_AT</code>.
     */
    public MemberRecord setModifiedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.MODIFIED_AT</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>MEMBER.DELETED_AT</code>.
     */
    public MemberRecord setDeletedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>MEMBER.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(Long id, String email, Byte typeCd, JSON description, LocalDateTime createdAt, LocalDateTime modifiedAt, LocalDateTime deletedAt) {
        super(Member.MEMBER);

        setId(id);
        setEmail(email);
        setTypeCd(typeCd);
        setDescription(description);
        setCreatedAt(createdAt);
        setModifiedAt(modifiedAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(jooq.jooq_dsl.tables.pojos.Member value) {
        super(Member.MEMBER);

        if (value != null) {
            setId(value.getId());
            setEmail(value.getEmail());
            setTypeCd(value.getTypeCd());
            setDescription(value.getDescription());
            setCreatedAt(value.getCreatedAt());
            setModifiedAt(value.getModifiedAt());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
