/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.SubmitHistory;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubmitHistoryRecord extends UpdatableRecordImpl<SubmitHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>SUBMIT_HISTORY.ID</code>.
     */
    public SubmitHistoryRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.PROBLEM_ID</code>.
     */
    public SubmitHistoryRecord setProblemId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.PROBLEM_ID</code>.
     */
    public Long getProblemId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.MEMBER_ID</code>.
     */
    public SubmitHistoryRecord setMemberId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.MEMBER_ID</code>.
     */
    public Long getMemberId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.SUBMIT_ANS</code>.
     */
    public SubmitHistoryRecord setSubmitAns(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.SUBMIT_ANS</code>.
     */
    public String getSubmitAns() {
        return (String) get(3);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.IS_SOLVED</code>.
     */
    public SubmitHistoryRecord setIsSolved(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.IS_SOLVED</code>.
     */
    public Boolean getIsSolved() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.CREATED_AT</code>.
     */
    public SubmitHistoryRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>SUBMIT_HISTORY.DELETED_AT</code>.
     */
    public SubmitHistoryRecord setDeletedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>SUBMIT_HISTORY.DELETED_AT</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubmitHistoryRecord
     */
    public SubmitHistoryRecord() {
        super(SubmitHistory.SUBMIT_HISTORY);
    }

    /**
     * Create a detached, initialised SubmitHistoryRecord
     */
    public SubmitHistoryRecord(Long id, Long problemId, Long memberId, String submitAns, Boolean isSolved, LocalDateTime createdAt, LocalDateTime deletedAt) {
        super(SubmitHistory.SUBMIT_HISTORY);

        setId(id);
        setProblemId(problemId);
        setMemberId(memberId);
        setSubmitAns(submitAns);
        setIsSolved(isSolved);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SubmitHistoryRecord
     */
    public SubmitHistoryRecord(jooq.jooq_dsl.tables.pojos.SubmitHistory value) {
        super(SubmitHistory.SUBMIT_HISTORY);

        if (value != null) {
            setId(value.getId());
            setProblemId(value.getProblemId());
            setMemberId(value.getMemberId());
            setSubmitAns(value.getSubmitAns());
            setIsSolved(value.getIsSolved());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
